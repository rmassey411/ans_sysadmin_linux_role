---
- name: Include OS-specific variables.
  include_vars: "patching/{{ ansible_os_family }}.yml"

# - name: Disable 3rd party repo files
#   ansible.builtin.shell: 
#     cmd: find "{{ enabled_repos_dir }}" -type f ! -name 'redhat.repo' -exec mv '{}' "{{ disabled_repos_dir }}" \; 
 
- name: List all repository files
  ansible.builtin.find:
    paths: "{{ repo_dir }}"
  register: repo_files

- name: Disable repos
  ansible.builtin.lineinfile:
    path: "{{ item.path }}"
    regexp: '^enabled[= ]'
    line: 'enabled = 0'
  when: 'repo_file not in item.path '
  with_items: "{{ repo_files.files }}"

- name: Clear the yum cache
  ansible.builtin.shell:
    cmd: /usr/bin/yum clean all
  ignore_errors: yes
      
- name: Patch server
  ansible.builtin.yum:
    name: '*'
    state: latest
    skip_broken: yes

# - name: Enable 3rd party repo files
#   ansible.builtin.shell:
#     cmd: find "{{ disabled_repos_dir }}" -type f ! -name 'redhat.repo' -exec mv '{}' "{{ enabled_repos_dir }}" \; 
  
# - name: Remove directory for disabled repos
#   ansible.builtin.file:
#     name: "{{ disabled_repos_dir }}"
#     mode: 0775
#     state: absent

# - name: Remove SHA1
#     command: update-crypto-policies --set DEFAULT:NO-SHA1
#   when: ansible_distribution == 'RedHat' and ansible_distribution_major_version|int == 8

- name: Reboot server
  ansible.builtin.reboot:
  
- name: Remove old kernels
  command: /usr/bin/package-cleanup --oldkernels --count 1 -y
  when: ansible_distribution == 'RedHat' and ansible_distribution_major_version|int == 7
